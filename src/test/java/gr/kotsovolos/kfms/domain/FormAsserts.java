package gr.kotsovolos.kfms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FormAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormAllPropertiesEquals(Form expected, Form actual) {
        assertFormAutoGeneratedPropertiesEquals(expected, actual);
        assertFormAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormAllUpdatablePropertiesEquals(Form expected, Form actual) {
        assertFormUpdatableFieldsEquals(expected, actual);
        assertFormUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormAutoGeneratedPropertiesEquals(Form expected, Form actual) {
        assertThat(expected)
            .as("Verify Form auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormUpdatableFieldsEquals(Form expected, Form actual) {
        assertThat(expected)
            .as("Verify Form relevant properties")
            .satisfies(e -> assertThat(e.getFormName()).as("check formName").isEqualTo(actual.getFormName()))
            .satisfies(e -> assertThat(e.getFormDescription()).as("check formDescription").isEqualTo(actual.getFormDescription()))
            .satisfies(e -> assertThat(e.getFormData()).as("check formData").isEqualTo(actual.getFormData()))
            .satisfies(e -> assertThat(e.getVersion()).as("check version").isEqualTo(actual.getVersion()))
            .satisfies(e -> assertThat(e.getIsDeleted()).as("check isDeleted").isEqualTo(actual.getIsDeleted()))
            .satisfies(e -> assertThat(e.getIsLocked()).as("check isLocked").isEqualTo(actual.getIsLocked()))
            .satisfies(e -> assertThat(e.getCreateDate()).as("check createDate").isEqualTo(actual.getCreateDate()))
            .satisfies(e -> assertThat(e.getUpdateDate()).as("check updateDate").isEqualTo(actual.getUpdateDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormUpdatableRelationshipsEquals(Form expected, Form actual) {
        assertThat(expected)
            .as("Verify Form relationships")
            .satisfies(e -> assertThat(e.getFormType()).as("check formType").isEqualTo(actual.getFormType()));
    }
}
